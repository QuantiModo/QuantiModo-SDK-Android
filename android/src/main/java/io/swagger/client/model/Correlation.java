/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Correlation {
  
  @SerializedName("averageDailyLowCause")
  private BigDecimal averageDailyLowCause = null;
  @SerializedName("averageDailyHighCause")
  private BigDecimal averageDailyHighCause = null;
  @SerializedName("averageEffect")
  private BigDecimal averageEffect = null;
  @SerializedName("averageEffectFollowingHighCause")
  private BigDecimal averageEffectFollowingHighCause = null;
  @SerializedName("averageEffectFollowingLowCause")
  private BigDecimal averageEffectFollowingLowCause = null;
  @SerializedName("averageEffectFollowingHighCauseExplanation")
  private String averageEffectFollowingHighCauseExplanation = null;
  @SerializedName("averageEffectFollowingLowCauseExplanation")
  private String averageEffectFollowingLowCauseExplanation = null;
  @SerializedName("averageVote")
  private BigDecimal averageVote = null;
  @SerializedName("causalityFactor")
  private BigDecimal causalityFactor = null;
  @SerializedName("cause")
  private String cause = null;
  @SerializedName("causeVariableCategoryName")
  private String causeVariableCategoryName = null;
  @SerializedName("causeChanges")
  private Integer causeChanges = null;
  @SerializedName("causeVariableCombinationOperation")
  private String causeVariableCombinationOperation = null;
  @SerializedName("causeVariableImageUrl")
  private String causeVariableImageUrl = null;
  @SerializedName("causeVariableIonIcon")
  private String causeVariableIonIcon = null;
  @SerializedName("causeUnit")
  private String causeUnit = null;
  @SerializedName("causeVariableDefaultUnitId")
  private Integer causeVariableDefaultUnitId = null;
  @SerializedName("causeVariableId")
  private Integer causeVariableId = null;
  @SerializedName("causeVariableName")
  private String causeVariableName = null;
  @SerializedName("correlationCoefficient")
  private BigDecimal correlationCoefficient = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("dataAnalysis")
  private String dataAnalysis = null;
  @SerializedName("dataSources")
  private String dataSources = null;
  @SerializedName("durationOfAction")
  private BigDecimal durationOfAction = null;
  @SerializedName("effect")
  private String effect = null;
  @SerializedName("effectVariableCategoryName")
  private String effectVariableCategoryName = null;
  @SerializedName("effectVariableImageUrl")
  private String effectVariableImageUrl = null;
  @SerializedName("effectVariableIonIcon")
  private String effectVariableIonIcon = null;
  @SerializedName("effectSize")
  private String effectSize = null;
  @SerializedName("effectVariableId")
  private String effectVariableId = null;
  @SerializedName("effectVariableName")
  private String effectVariableName = null;
  @SerializedName("gaugeImage")
  private String gaugeImage = null;
  @SerializedName("imageUrl")
  private String imageUrl = null;
  @SerializedName("numberOfPairs")
  private BigDecimal numberOfPairs = null;
  @SerializedName("onsetDelay")
  private Double onsetDelay = null;
  @SerializedName("optimalPearsonProduct")
  private BigDecimal optimalPearsonProduct = null;
  @SerializedName("outcomeDataSources")
  private String outcomeDataSources = null;
  @SerializedName("predictorExplanation")
  private String predictorExplanation = null;
  @SerializedName("principalInvestigator")
  private String principalInvestigator = null;
  @SerializedName("qmScore")
  private BigDecimal qmScore = null;
  @SerializedName("reverseCorrelation")
  private BigDecimal reverseCorrelation = null;
  @SerializedName("significanceExplanation")
  private String significanceExplanation = null;
  @SerializedName("statisticalSignificance")
  private String statisticalSignificance = null;
  @SerializedName("strengthLevel")
  private String strengthLevel = null;
  @SerializedName("studyAbstract")
  private String studyAbstract = null;
  @SerializedName("studyBackground")
  private String studyBackground = null;
  @SerializedName("studyDesign")
  private String studyDesign = null;
  @SerializedName("studyLimitations")
  private String studyLimitations = null;
  @SerializedName("studyLinkDynamic")
  private String studyLinkDynamic = null;
  @SerializedName("studyLinkFacebook")
  private String studyLinkFacebook = null;
  @SerializedName("studyLinkGoogle")
  private String studyLinkGoogle = null;
  @SerializedName("studyLinkTwitter")
  private String studyLinkTwitter = null;
  @SerializedName("studyLinkStatic")
  private String studyLinkStatic = null;
  @SerializedName("studyObjective")
  private String studyObjective = null;
  @SerializedName("studyResults")
  private String studyResults = null;
  @SerializedName("studyTitle")
  private String studyTitle = null;
  @SerializedName("timestamp")
  private BigDecimal timestamp = null;
  @SerializedName("updatedAt")
  private Date updatedAt = null;
  @SerializedName("userVote")
  private BigDecimal userVote = null;
  @SerializedName("valuePredictingHighOutcome")
  private BigDecimal valuePredictingHighOutcome = null;
  @SerializedName("valuePredictingHighOutcomeExplanation")
  private String valuePredictingHighOutcomeExplanation = null;
  @SerializedName("valuePredictingLowOutcome")
  private BigDecimal valuePredictingLowOutcome = null;
  @SerializedName("valuePredictingLowOutcomeExplanation")
  private String valuePredictingLowOutcomeExplanation = null;

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getAverageDailyLowCause() {
    return averageDailyLowCause;
  }
  public void setAverageDailyLowCause(BigDecimal averageDailyLowCause) {
    this.averageDailyLowCause = averageDailyLowCause;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getAverageDailyHighCause() {
    return averageDailyHighCause;
  }
  public void setAverageDailyHighCause(BigDecimal averageDailyHighCause) {
    this.averageDailyHighCause = averageDailyHighCause;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getAverageEffect() {
    return averageEffect;
  }
  public void setAverageEffect(BigDecimal averageEffect) {
    this.averageEffect = averageEffect;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getAverageEffectFollowingHighCause() {
    return averageEffectFollowingHighCause;
  }
  public void setAverageEffectFollowingHighCause(BigDecimal averageEffectFollowingHighCause) {
    this.averageEffectFollowingHighCause = averageEffectFollowingHighCause;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getAverageEffectFollowingLowCause() {
    return averageEffectFollowingLowCause;
  }
  public void setAverageEffectFollowingLowCause(BigDecimal averageEffectFollowingLowCause) {
    this.averageEffectFollowingLowCause = averageEffectFollowingLowCause;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getAverageEffectFollowingHighCauseExplanation() {
    return averageEffectFollowingHighCauseExplanation;
  }
  public void setAverageEffectFollowingHighCauseExplanation(String averageEffectFollowingHighCauseExplanation) {
    this.averageEffectFollowingHighCauseExplanation = averageEffectFollowingHighCauseExplanation;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getAverageEffectFollowingLowCauseExplanation() {
    return averageEffectFollowingLowCauseExplanation;
  }
  public void setAverageEffectFollowingLowCauseExplanation(String averageEffectFollowingLowCauseExplanation) {
    this.averageEffectFollowingLowCauseExplanation = averageEffectFollowingLowCauseExplanation;
  }

  /**
   * Average Vote
   **/
  @ApiModelProperty(value = "Average Vote")
  public BigDecimal getAverageVote() {
    return averageVote;
  }
  public void setAverageVote(BigDecimal averageVote) {
    this.averageVote = averageVote;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getCausalityFactor() {
    return causalityFactor;
  }
  public void setCausalityFactor(BigDecimal causalityFactor) {
    this.causalityFactor = causalityFactor;
  }

  /**
   * Variable name of the cause variable for which the user desires correlations.
   **/
  @ApiModelProperty(required = true, value = "Variable name of the cause variable for which the user desires correlations.")
  public String getCause() {
    return cause;
  }
  public void setCause(String cause) {
    this.cause = cause;
  }

  /**
   * Variable category of the cause variable.
   **/
  @ApiModelProperty(value = "Variable category of the cause variable.")
  public String getCauseVariableCategoryName() {
    return causeVariableCategoryName;
  }
  public void setCauseVariableCategoryName(String causeVariableCategoryName) {
    this.causeVariableCategoryName = causeVariableCategoryName;
  }

  /**
   * Number of changes in the predictor variable (a.k.a the number of experiments)
   **/
  @ApiModelProperty(value = "Number of changes in the predictor variable (a.k.a the number of experiments)")
  public Integer getCauseChanges() {
    return causeChanges;
  }
  public void setCauseChanges(Integer causeChanges) {
    this.causeChanges = causeChanges;
  }

  /**
   * The way cause measurements are aggregated
   **/
  @ApiModelProperty(value = "The way cause measurements are aggregated")
  public String getCauseVariableCombinationOperation() {
    return causeVariableCombinationOperation;
  }
  public void setCauseVariableCombinationOperation(String causeVariableCombinationOperation) {
    this.causeVariableCombinationOperation = causeVariableCombinationOperation;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getCauseVariableImageUrl() {
    return causeVariableImageUrl;
  }
  public void setCauseVariableImageUrl(String causeVariableImageUrl) {
    this.causeVariableImageUrl = causeVariableImageUrl;
  }

  /**
   * For use in Ionic apps
   **/
  @ApiModelProperty(value = "For use in Ionic apps")
  public String getCauseVariableIonIcon() {
    return causeVariableIonIcon;
  }
  public void setCauseVariableIonIcon(String causeVariableIonIcon) {
    this.causeVariableIonIcon = causeVariableIonIcon;
  }

  /**
   * Unit of the predictor variable
   **/
  @ApiModelProperty(value = "Unit of the predictor variable")
  public String getCauseUnit() {
    return causeUnit;
  }
  public void setCauseUnit(String causeUnit) {
    this.causeUnit = causeUnit;
  }

  /**
   * Unit Id of the predictor variable
   **/
  @ApiModelProperty(value = "Unit Id of the predictor variable")
  public Integer getCauseVariableDefaultUnitId() {
    return causeVariableDefaultUnitId;
  }
  public void setCauseVariableDefaultUnitId(Integer causeVariableDefaultUnitId) {
    this.causeVariableDefaultUnitId = causeVariableDefaultUnitId;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Integer getCauseVariableId() {
    return causeVariableId;
  }
  public void setCauseVariableId(Integer causeVariableId) {
    this.causeVariableId = causeVariableId;
  }

  /**
   * Variable name of the cause variable for which the user desires correlations.
   **/
  @ApiModelProperty(value = "Variable name of the cause variable for which the user desires correlations.")
  public String getCauseVariableName() {
    return causeVariableName;
  }
  public void setCauseVariableName(String causeVariableName) {
    this.causeVariableName = causeVariableName;
  }

  /**
   * Pearson correlation coefficient between cause and effect measurements
   **/
  @ApiModelProperty(required = true, value = "Pearson correlation coefficient between cause and effect measurements")
  public BigDecimal getCorrelationCoefficient() {
    return correlationCoefficient;
  }
  public void setCorrelationCoefficient(BigDecimal correlationCoefficient) {
    this.correlationCoefficient = correlationCoefficient;
  }

  /**
   * When the record was first created. Use UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"  datetime format
   **/
  @ApiModelProperty(value = "When the record was first created. Use UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"  datetime format")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * How the data was analyzed
   **/
  @ApiModelProperty(value = "How the data was analyzed")
  public String getDataAnalysis() {
    return dataAnalysis;
  }
  public void setDataAnalysis(String dataAnalysis) {
    this.dataAnalysis = dataAnalysis;
  }

  /**
   * How the data was obtained
   **/
  @ApiModelProperty(value = "How the data was obtained")
  public String getDataSources() {
    return dataSources;
  }
  public void setDataSources(String dataSources) {
    this.dataSources = dataSources;
  }

  /**
   * The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.
   **/
  @ApiModelProperty(required = true, value = "The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.")
  public BigDecimal getDurationOfAction() {
    return durationOfAction;
  }
  public void setDurationOfAction(BigDecimal durationOfAction) {
    this.durationOfAction = durationOfAction;
  }

  /**
   * Variable name of the effect variable for which the user desires correlations.
   **/
  @ApiModelProperty(required = true, value = "Variable name of the effect variable for which the user desires correlations.")
  public String getEffect() {
    return effect;
  }
  public void setEffect(String effect) {
    this.effect = effect;
  }

  /**
   * Variable category of the effect variable.
   **/
  @ApiModelProperty(value = "Variable category of the effect variable.")
  public String getEffectVariableCategoryName() {
    return effectVariableCategoryName;
  }
  public void setEffectVariableCategoryName(String effectVariableCategoryName) {
    this.effectVariableCategoryName = effectVariableCategoryName;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getEffectVariableImageUrl() {
    return effectVariableImageUrl;
  }
  public void setEffectVariableImageUrl(String effectVariableImageUrl) {
    this.effectVariableImageUrl = effectVariableImageUrl;
  }

  /**
   * For use in Ionic apps
   **/
  @ApiModelProperty(value = "For use in Ionic apps")
  public String getEffectVariableIonIcon() {
    return effectVariableIonIcon;
  }
  public void setEffectVariableIonIcon(String effectVariableIonIcon) {
    this.effectVariableIonIcon = effectVariableIonIcon;
  }

  /**
   * Magnitude of the effects of a cause indicating whether it's practically meaningful.
   **/
  @ApiModelProperty(value = "Magnitude of the effects of a cause indicating whether it's practically meaningful.")
  public String getEffectSize() {
    return effectSize;
  }
  public void setEffectSize(String effectSize) {
    this.effectSize = effectSize;
  }

  /**
   * Magnitude of the effects of a cause indicating whether it's practically meaningful.
   **/
  @ApiModelProperty(value = "Magnitude of the effects of a cause indicating whether it's practically meaningful.")
  public String getEffectVariableId() {
    return effectVariableId;
  }
  public void setEffectVariableId(String effectVariableId) {
    this.effectVariableId = effectVariableId;
  }

  /**
   * Variable name of the effect variable for which the user desires correlations.
   **/
  @ApiModelProperty(value = "Variable name of the effect variable for which the user desires correlations.")
  public String getEffectVariableName() {
    return effectVariableName;
  }
  public void setEffectVariableName(String effectVariableName) {
    this.effectVariableName = effectVariableName;
  }

  /**
   * Illustrates the strength of the relationship
   **/
  @ApiModelProperty(value = "Illustrates the strength of the relationship")
  public String getGaugeImage() {
    return gaugeImage;
  }
  public void setGaugeImage(String gaugeImage) {
    this.gaugeImage = gaugeImage;
  }

  /**
   * Large image for Facebook
   **/
  @ApiModelProperty(value = "Large image for Facebook")
  public String getImageUrl() {
    return imageUrl;
  }
  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  /**
   * Number of points that went into the correlation calculation
   **/
  @ApiModelProperty(required = true, value = "Number of points that went into the correlation calculation")
  public BigDecimal getNumberOfPairs() {
    return numberOfPairs;
  }
  public void setNumberOfPairs(BigDecimal numberOfPairs) {
    this.numberOfPairs = numberOfPairs;
  }

  /**
   * The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the “onset delay”. For example, the “onset delay” between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.
   **/
  @ApiModelProperty(required = true, value = "The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the “onset delay”. For example, the “onset delay” between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.")
  public Double getOnsetDelay() {
    return onsetDelay;
  }
  public void setOnsetDelay(Double onsetDelay) {
    this.onsetDelay = onsetDelay;
  }

  /**
   * Optimal Pearson Product
   **/
  @ApiModelProperty(value = "Optimal Pearson Product")
  public BigDecimal getOptimalPearsonProduct() {
    return optimalPearsonProduct;
  }
  public void setOptimalPearsonProduct(BigDecimal optimalPearsonProduct) {
    this.optimalPearsonProduct = optimalPearsonProduct;
  }

  /**
   * original name of the cause.
   **/
  @ApiModelProperty(value = "original name of the cause.")
  public String getOutcomeDataSources() {
    return outcomeDataSources;
  }
  public void setOutcomeDataSources(String outcomeDataSources) {
    this.outcomeDataSources = outcomeDataSources;
  }

  /**
   * HIGHER Remeron predicts HIGHER Overall Mood
   **/
  @ApiModelProperty(value = "HIGHER Remeron predicts HIGHER Overall Mood")
  public String getPredictorExplanation() {
    return predictorExplanation;
  }
  public void setPredictorExplanation(String predictorExplanation) {
    this.predictorExplanation = predictorExplanation;
  }

  /**
   * Mike Sinn
   **/
  @ApiModelProperty(value = "Mike Sinn")
  public String getPrincipalInvestigator() {
    return principalInvestigator;
  }
  public void setPrincipalInvestigator(String principalInvestigator) {
    this.principalInvestigator = principalInvestigator;
  }

  /**
   * Value representing the significance of the relationship as a function of crowdsourced insights, predictive strength, data quantity, and data quality
   **/
  @ApiModelProperty(value = "Value representing the significance of the relationship as a function of crowdsourced insights, predictive strength, data quantity, and data quality")
  public BigDecimal getQmScore() {
    return qmScore;
  }
  public void setQmScore(BigDecimal qmScore) {
    this.qmScore = qmScore;
  }

  /**
   * Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.
   **/
  @ApiModelProperty(value = "Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.")
  public BigDecimal getReverseCorrelation() {
    return reverseCorrelation;
  }
  public void setReverseCorrelation(BigDecimal reverseCorrelation) {
    this.reverseCorrelation = reverseCorrelation;
  }

  /**
   * Using a two-tailed t-test with alpha = 0.05, it was determined that the change...
   **/
  @ApiModelProperty(value = "Using a two-tailed t-test with alpha = 0.05, it was determined that the change...")
  public String getSignificanceExplanation() {
    return significanceExplanation;
  }
  public void setSignificanceExplanation(String significanceExplanation) {
    this.significanceExplanation = significanceExplanation;
  }

  /**
   * A function of the effect size and sample size
   **/
  @ApiModelProperty(value = "A function of the effect size and sample size")
  public String getStatisticalSignificance() {
    return statisticalSignificance;
  }
  public void setStatisticalSignificance(String statisticalSignificance) {
    this.statisticalSignificance = statisticalSignificance;
  }

  /**
   * weak, moderate, strong
   **/
  @ApiModelProperty(value = "weak, moderate, strong")
  public String getStrengthLevel() {
    return strengthLevel;
  }
  public void setStrengthLevel(String strengthLevel) {
    this.strengthLevel = strengthLevel;
  }

  /**
   * These data suggest with a high degree of confidence...
   **/
  @ApiModelProperty(value = "These data suggest with a high degree of confidence...")
  public String getStudyAbstract() {
    return studyAbstract;
  }
  public void setStudyAbstract(String studyAbstract) {
    this.studyAbstract = studyAbstract;
  }

  /**
   * In order to reduce suffering through the advancement of human knowledge...
   **/
  @ApiModelProperty(value = "In order to reduce suffering through the advancement of human knowledge...")
  public String getStudyBackground() {
    return studyBackground;
  }
  public void setStudyBackground(String studyBackground) {
    this.studyBackground = studyBackground;
  }

  /**
   * This study is based on data donated by one QuantiModo user...
   **/
  @ApiModelProperty(value = "This study is based on data donated by one QuantiModo user...")
  public String getStudyDesign() {
    return studyDesign;
  }
  public void setStudyDesign(String studyDesign) {
    this.studyDesign = studyDesign;
  }

  /**
   * As with any human experiment, it was impossible to control for all potentially confounding variables...
   **/
  @ApiModelProperty(value = "As with any human experiment, it was impossible to control for all potentially confounding variables...")
  public String getStudyLimitations() {
    return studyLimitations;
  }
  public void setStudyLimitations(String studyLimitations) {
    this.studyLimitations = studyLimitations;
  }

  /**
   * Url for the interactive study within the web app
   **/
  @ApiModelProperty(value = "Url for the interactive study within the web app")
  public String getStudyLinkDynamic() {
    return studyLinkDynamic;
  }
  public void setStudyLinkDynamic(String studyLinkDynamic) {
    this.studyLinkDynamic = studyLinkDynamic;
  }

  /**
   * Url for sharing the study on Facebook
   **/
  @ApiModelProperty(value = "Url for sharing the study on Facebook")
  public String getStudyLinkFacebook() {
    return studyLinkFacebook;
  }
  public void setStudyLinkFacebook(String studyLinkFacebook) {
    this.studyLinkFacebook = studyLinkFacebook;
  }

  /**
   * Url for sharing the study on Google+
   **/
  @ApiModelProperty(value = "Url for sharing the study on Google+")
  public String getStudyLinkGoogle() {
    return studyLinkGoogle;
  }
  public void setStudyLinkGoogle(String studyLinkGoogle) {
    this.studyLinkGoogle = studyLinkGoogle;
  }

  /**
   * Url for sharing the study on Twitter
   **/
  @ApiModelProperty(value = "Url for sharing the study on Twitter")
  public String getStudyLinkTwitter() {
    return studyLinkTwitter;
  }
  public void setStudyLinkTwitter(String studyLinkTwitter) {
    this.studyLinkTwitter = studyLinkTwitter;
  }

  /**
   * Url for sharing the statically rendered study on social media
   **/
  @ApiModelProperty(value = "Url for sharing the statically rendered study on social media")
  public String getStudyLinkStatic() {
    return studyLinkStatic;
  }
  public void setStudyLinkStatic(String studyLinkStatic) {
    this.studyLinkStatic = studyLinkStatic;
  }

  /**
   * The objective of this study is to determine...
   **/
  @ApiModelProperty(value = "The objective of this study is to determine...")
  public String getStudyObjective() {
    return studyObjective;
  }
  public void setStudyObjective(String studyObjective) {
    this.studyObjective = studyObjective;
  }

  /**
   * This analysis suggests that...
   **/
  @ApiModelProperty(value = "This analysis suggests that...")
  public String getStudyResults() {
    return studyResults;
  }
  public void setStudyResults(String studyResults) {
    this.studyResults = studyResults;
  }

  /**
   * N1 Study HIGHER Remeron predicts HIGHER Overall Mood
   **/
  @ApiModelProperty(value = "N1 Study HIGHER Remeron predicts HIGHER Overall Mood")
  public String getStudyTitle() {
    return studyTitle;
  }
  public void setStudyTitle(String studyTitle) {
    this.studyTitle = studyTitle;
  }

  /**
   * Time at which correlation was calculated
   **/
  @ApiModelProperty(required = true, value = "Time at which correlation was calculated")
  public BigDecimal getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * When the record in the database was last updated. Use UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"  datetime format. Time zone should be UTC and not local.
   **/
  @ApiModelProperty(value = "When the record in the database was last updated. Use UTC ISO 8601 \"YYYY-MM-DDThh:mm:ss\"  datetime format. Time zone should be UTC and not local.")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  /**
   * User Vote
   **/
  @ApiModelProperty(value = "User Vote")
  public BigDecimal getUserVote() {
    return userVote;
  }
  public void setUserVote(BigDecimal userVote) {
    this.userVote = userVote;
  }

  /**
   * cause value that predicts an above average effect value (in default unit for cause variable)
   **/
  @ApiModelProperty(value = "cause value that predicts an above average effect value (in default unit for cause variable)")
  public BigDecimal getValuePredictingHighOutcome() {
    return valuePredictingHighOutcome;
  }
  public void setValuePredictingHighOutcome(BigDecimal valuePredictingHighOutcome) {
    this.valuePredictingHighOutcome = valuePredictingHighOutcome;
  }

  /**
   * Overall Mood, on average, 34% HIGHER after around 3.98mg Remeron
   **/
  @ApiModelProperty(value = "Overall Mood, on average, 34% HIGHER after around 3.98mg Remeron")
  public String getValuePredictingHighOutcomeExplanation() {
    return valuePredictingHighOutcomeExplanation;
  }
  public void setValuePredictingHighOutcomeExplanation(String valuePredictingHighOutcomeExplanation) {
    this.valuePredictingHighOutcomeExplanation = valuePredictingHighOutcomeExplanation;
  }

  /**
   * cause value that predicts a below average effect value (in default unit for cause variable)
   **/
  @ApiModelProperty(value = "cause value that predicts a below average effect value (in default unit for cause variable)")
  public BigDecimal getValuePredictingLowOutcome() {
    return valuePredictingLowOutcome;
  }
  public void setValuePredictingLowOutcome(BigDecimal valuePredictingLowOutcome) {
    this.valuePredictingLowOutcome = valuePredictingLowOutcome;
  }

  /**
   * Overall Mood, on average, 4% LOWER after around 0mg Remeron
   **/
  @ApiModelProperty(value = "Overall Mood, on average, 4% LOWER after around 0mg Remeron")
  public String getValuePredictingLowOutcomeExplanation() {
    return valuePredictingLowOutcomeExplanation;
  }
  public void setValuePredictingLowOutcomeExplanation(String valuePredictingLowOutcomeExplanation) {
    this.valuePredictingLowOutcomeExplanation = valuePredictingLowOutcomeExplanation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Correlation correlation = (Correlation) o;
    return (this.averageDailyLowCause == null ? correlation.averageDailyLowCause == null : this.averageDailyLowCause.equals(correlation.averageDailyLowCause)) &&
        (this.averageDailyHighCause == null ? correlation.averageDailyHighCause == null : this.averageDailyHighCause.equals(correlation.averageDailyHighCause)) &&
        (this.averageEffect == null ? correlation.averageEffect == null : this.averageEffect.equals(correlation.averageEffect)) &&
        (this.averageEffectFollowingHighCause == null ? correlation.averageEffectFollowingHighCause == null : this.averageEffectFollowingHighCause.equals(correlation.averageEffectFollowingHighCause)) &&
        (this.averageEffectFollowingLowCause == null ? correlation.averageEffectFollowingLowCause == null : this.averageEffectFollowingLowCause.equals(correlation.averageEffectFollowingLowCause)) &&
        (this.averageEffectFollowingHighCauseExplanation == null ? correlation.averageEffectFollowingHighCauseExplanation == null : this.averageEffectFollowingHighCauseExplanation.equals(correlation.averageEffectFollowingHighCauseExplanation)) &&
        (this.averageEffectFollowingLowCauseExplanation == null ? correlation.averageEffectFollowingLowCauseExplanation == null : this.averageEffectFollowingLowCauseExplanation.equals(correlation.averageEffectFollowingLowCauseExplanation)) &&
        (this.averageVote == null ? correlation.averageVote == null : this.averageVote.equals(correlation.averageVote)) &&
        (this.causalityFactor == null ? correlation.causalityFactor == null : this.causalityFactor.equals(correlation.causalityFactor)) &&
        (this.cause == null ? correlation.cause == null : this.cause.equals(correlation.cause)) &&
        (this.causeVariableCategoryName == null ? correlation.causeVariableCategoryName == null : this.causeVariableCategoryName.equals(correlation.causeVariableCategoryName)) &&
        (this.causeChanges == null ? correlation.causeChanges == null : this.causeChanges.equals(correlation.causeChanges)) &&
        (this.causeVariableCombinationOperation == null ? correlation.causeVariableCombinationOperation == null : this.causeVariableCombinationOperation.equals(correlation.causeVariableCombinationOperation)) &&
        (this.causeVariableImageUrl == null ? correlation.causeVariableImageUrl == null : this.causeVariableImageUrl.equals(correlation.causeVariableImageUrl)) &&
        (this.causeVariableIonIcon == null ? correlation.causeVariableIonIcon == null : this.causeVariableIonIcon.equals(correlation.causeVariableIonIcon)) &&
        (this.causeUnit == null ? correlation.causeUnit == null : this.causeUnit.equals(correlation.causeUnit)) &&
        (this.causeVariableDefaultUnitId == null ? correlation.causeVariableDefaultUnitId == null : this.causeVariableDefaultUnitId.equals(correlation.causeVariableDefaultUnitId)) &&
        (this.causeVariableId == null ? correlation.causeVariableId == null : this.causeVariableId.equals(correlation.causeVariableId)) &&
        (this.causeVariableName == null ? correlation.causeVariableName == null : this.causeVariableName.equals(correlation.causeVariableName)) &&
        (this.correlationCoefficient == null ? correlation.correlationCoefficient == null : this.correlationCoefficient.equals(correlation.correlationCoefficient)) &&
        (this.createdAt == null ? correlation.createdAt == null : this.createdAt.equals(correlation.createdAt)) &&
        (this.dataAnalysis == null ? correlation.dataAnalysis == null : this.dataAnalysis.equals(correlation.dataAnalysis)) &&
        (this.dataSources == null ? correlation.dataSources == null : this.dataSources.equals(correlation.dataSources)) &&
        (this.durationOfAction == null ? correlation.durationOfAction == null : this.durationOfAction.equals(correlation.durationOfAction)) &&
        (this.effect == null ? correlation.effect == null : this.effect.equals(correlation.effect)) &&
        (this.effectVariableCategoryName == null ? correlation.effectVariableCategoryName == null : this.effectVariableCategoryName.equals(correlation.effectVariableCategoryName)) &&
        (this.effectVariableImageUrl == null ? correlation.effectVariableImageUrl == null : this.effectVariableImageUrl.equals(correlation.effectVariableImageUrl)) &&
        (this.effectVariableIonIcon == null ? correlation.effectVariableIonIcon == null : this.effectVariableIonIcon.equals(correlation.effectVariableIonIcon)) &&
        (this.effectSize == null ? correlation.effectSize == null : this.effectSize.equals(correlation.effectSize)) &&
        (this.effectVariableId == null ? correlation.effectVariableId == null : this.effectVariableId.equals(correlation.effectVariableId)) &&
        (this.effectVariableName == null ? correlation.effectVariableName == null : this.effectVariableName.equals(correlation.effectVariableName)) &&
        (this.gaugeImage == null ? correlation.gaugeImage == null : this.gaugeImage.equals(correlation.gaugeImage)) &&
        (this.imageUrl == null ? correlation.imageUrl == null : this.imageUrl.equals(correlation.imageUrl)) &&
        (this.numberOfPairs == null ? correlation.numberOfPairs == null : this.numberOfPairs.equals(correlation.numberOfPairs)) &&
        (this.onsetDelay == null ? correlation.onsetDelay == null : this.onsetDelay.equals(correlation.onsetDelay)) &&
        (this.optimalPearsonProduct == null ? correlation.optimalPearsonProduct == null : this.optimalPearsonProduct.equals(correlation.optimalPearsonProduct)) &&
        (this.outcomeDataSources == null ? correlation.outcomeDataSources == null : this.outcomeDataSources.equals(correlation.outcomeDataSources)) &&
        (this.predictorExplanation == null ? correlation.predictorExplanation == null : this.predictorExplanation.equals(correlation.predictorExplanation)) &&
        (this.principalInvestigator == null ? correlation.principalInvestigator == null : this.principalInvestigator.equals(correlation.principalInvestigator)) &&
        (this.qmScore == null ? correlation.qmScore == null : this.qmScore.equals(correlation.qmScore)) &&
        (this.reverseCorrelation == null ? correlation.reverseCorrelation == null : this.reverseCorrelation.equals(correlation.reverseCorrelation)) &&
        (this.significanceExplanation == null ? correlation.significanceExplanation == null : this.significanceExplanation.equals(correlation.significanceExplanation)) &&
        (this.statisticalSignificance == null ? correlation.statisticalSignificance == null : this.statisticalSignificance.equals(correlation.statisticalSignificance)) &&
        (this.strengthLevel == null ? correlation.strengthLevel == null : this.strengthLevel.equals(correlation.strengthLevel)) &&
        (this.studyAbstract == null ? correlation.studyAbstract == null : this.studyAbstract.equals(correlation.studyAbstract)) &&
        (this.studyBackground == null ? correlation.studyBackground == null : this.studyBackground.equals(correlation.studyBackground)) &&
        (this.studyDesign == null ? correlation.studyDesign == null : this.studyDesign.equals(correlation.studyDesign)) &&
        (this.studyLimitations == null ? correlation.studyLimitations == null : this.studyLimitations.equals(correlation.studyLimitations)) &&
        (this.studyLinkDynamic == null ? correlation.studyLinkDynamic == null : this.studyLinkDynamic.equals(correlation.studyLinkDynamic)) &&
        (this.studyLinkFacebook == null ? correlation.studyLinkFacebook == null : this.studyLinkFacebook.equals(correlation.studyLinkFacebook)) &&
        (this.studyLinkGoogle == null ? correlation.studyLinkGoogle == null : this.studyLinkGoogle.equals(correlation.studyLinkGoogle)) &&
        (this.studyLinkTwitter == null ? correlation.studyLinkTwitter == null : this.studyLinkTwitter.equals(correlation.studyLinkTwitter)) &&
        (this.studyLinkStatic == null ? correlation.studyLinkStatic == null : this.studyLinkStatic.equals(correlation.studyLinkStatic)) &&
        (this.studyObjective == null ? correlation.studyObjective == null : this.studyObjective.equals(correlation.studyObjective)) &&
        (this.studyResults == null ? correlation.studyResults == null : this.studyResults.equals(correlation.studyResults)) &&
        (this.studyTitle == null ? correlation.studyTitle == null : this.studyTitle.equals(correlation.studyTitle)) &&
        (this.timestamp == null ? correlation.timestamp == null : this.timestamp.equals(correlation.timestamp)) &&
        (this.updatedAt == null ? correlation.updatedAt == null : this.updatedAt.equals(correlation.updatedAt)) &&
        (this.userVote == null ? correlation.userVote == null : this.userVote.equals(correlation.userVote)) &&
        (this.valuePredictingHighOutcome == null ? correlation.valuePredictingHighOutcome == null : this.valuePredictingHighOutcome.equals(correlation.valuePredictingHighOutcome)) &&
        (this.valuePredictingHighOutcomeExplanation == null ? correlation.valuePredictingHighOutcomeExplanation == null : this.valuePredictingHighOutcomeExplanation.equals(correlation.valuePredictingHighOutcomeExplanation)) &&
        (this.valuePredictingLowOutcome == null ? correlation.valuePredictingLowOutcome == null : this.valuePredictingLowOutcome.equals(correlation.valuePredictingLowOutcome)) &&
        (this.valuePredictingLowOutcomeExplanation == null ? correlation.valuePredictingLowOutcomeExplanation == null : this.valuePredictingLowOutcomeExplanation.equals(correlation.valuePredictingLowOutcomeExplanation));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.averageDailyLowCause == null ? 0: this.averageDailyLowCause.hashCode());
    result = 31 * result + (this.averageDailyHighCause == null ? 0: this.averageDailyHighCause.hashCode());
    result = 31 * result + (this.averageEffect == null ? 0: this.averageEffect.hashCode());
    result = 31 * result + (this.averageEffectFollowingHighCause == null ? 0: this.averageEffectFollowingHighCause.hashCode());
    result = 31 * result + (this.averageEffectFollowingLowCause == null ? 0: this.averageEffectFollowingLowCause.hashCode());
    result = 31 * result + (this.averageEffectFollowingHighCauseExplanation == null ? 0: this.averageEffectFollowingHighCauseExplanation.hashCode());
    result = 31 * result + (this.averageEffectFollowingLowCauseExplanation == null ? 0: this.averageEffectFollowingLowCauseExplanation.hashCode());
    result = 31 * result + (this.averageVote == null ? 0: this.averageVote.hashCode());
    result = 31 * result + (this.causalityFactor == null ? 0: this.causalityFactor.hashCode());
    result = 31 * result + (this.cause == null ? 0: this.cause.hashCode());
    result = 31 * result + (this.causeVariableCategoryName == null ? 0: this.causeVariableCategoryName.hashCode());
    result = 31 * result + (this.causeChanges == null ? 0: this.causeChanges.hashCode());
    result = 31 * result + (this.causeVariableCombinationOperation == null ? 0: this.causeVariableCombinationOperation.hashCode());
    result = 31 * result + (this.causeVariableImageUrl == null ? 0: this.causeVariableImageUrl.hashCode());
    result = 31 * result + (this.causeVariableIonIcon == null ? 0: this.causeVariableIonIcon.hashCode());
    result = 31 * result + (this.causeUnit == null ? 0: this.causeUnit.hashCode());
    result = 31 * result + (this.causeVariableDefaultUnitId == null ? 0: this.causeVariableDefaultUnitId.hashCode());
    result = 31 * result + (this.causeVariableId == null ? 0: this.causeVariableId.hashCode());
    result = 31 * result + (this.causeVariableName == null ? 0: this.causeVariableName.hashCode());
    result = 31 * result + (this.correlationCoefficient == null ? 0: this.correlationCoefficient.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.dataAnalysis == null ? 0: this.dataAnalysis.hashCode());
    result = 31 * result + (this.dataSources == null ? 0: this.dataSources.hashCode());
    result = 31 * result + (this.durationOfAction == null ? 0: this.durationOfAction.hashCode());
    result = 31 * result + (this.effect == null ? 0: this.effect.hashCode());
    result = 31 * result + (this.effectVariableCategoryName == null ? 0: this.effectVariableCategoryName.hashCode());
    result = 31 * result + (this.effectVariableImageUrl == null ? 0: this.effectVariableImageUrl.hashCode());
    result = 31 * result + (this.effectVariableIonIcon == null ? 0: this.effectVariableIonIcon.hashCode());
    result = 31 * result + (this.effectSize == null ? 0: this.effectSize.hashCode());
    result = 31 * result + (this.effectVariableId == null ? 0: this.effectVariableId.hashCode());
    result = 31 * result + (this.effectVariableName == null ? 0: this.effectVariableName.hashCode());
    result = 31 * result + (this.gaugeImage == null ? 0: this.gaugeImage.hashCode());
    result = 31 * result + (this.imageUrl == null ? 0: this.imageUrl.hashCode());
    result = 31 * result + (this.numberOfPairs == null ? 0: this.numberOfPairs.hashCode());
    result = 31 * result + (this.onsetDelay == null ? 0: this.onsetDelay.hashCode());
    result = 31 * result + (this.optimalPearsonProduct == null ? 0: this.optimalPearsonProduct.hashCode());
    result = 31 * result + (this.outcomeDataSources == null ? 0: this.outcomeDataSources.hashCode());
    result = 31 * result + (this.predictorExplanation == null ? 0: this.predictorExplanation.hashCode());
    result = 31 * result + (this.principalInvestigator == null ? 0: this.principalInvestigator.hashCode());
    result = 31 * result + (this.qmScore == null ? 0: this.qmScore.hashCode());
    result = 31 * result + (this.reverseCorrelation == null ? 0: this.reverseCorrelation.hashCode());
    result = 31 * result + (this.significanceExplanation == null ? 0: this.significanceExplanation.hashCode());
    result = 31 * result + (this.statisticalSignificance == null ? 0: this.statisticalSignificance.hashCode());
    result = 31 * result + (this.strengthLevel == null ? 0: this.strengthLevel.hashCode());
    result = 31 * result + (this.studyAbstract == null ? 0: this.studyAbstract.hashCode());
    result = 31 * result + (this.studyBackground == null ? 0: this.studyBackground.hashCode());
    result = 31 * result + (this.studyDesign == null ? 0: this.studyDesign.hashCode());
    result = 31 * result + (this.studyLimitations == null ? 0: this.studyLimitations.hashCode());
    result = 31 * result + (this.studyLinkDynamic == null ? 0: this.studyLinkDynamic.hashCode());
    result = 31 * result + (this.studyLinkFacebook == null ? 0: this.studyLinkFacebook.hashCode());
    result = 31 * result + (this.studyLinkGoogle == null ? 0: this.studyLinkGoogle.hashCode());
    result = 31 * result + (this.studyLinkTwitter == null ? 0: this.studyLinkTwitter.hashCode());
    result = 31 * result + (this.studyLinkStatic == null ? 0: this.studyLinkStatic.hashCode());
    result = 31 * result + (this.studyObjective == null ? 0: this.studyObjective.hashCode());
    result = 31 * result + (this.studyResults == null ? 0: this.studyResults.hashCode());
    result = 31 * result + (this.studyTitle == null ? 0: this.studyTitle.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    result = 31 * result + (this.userVote == null ? 0: this.userVote.hashCode());
    result = 31 * result + (this.valuePredictingHighOutcome == null ? 0: this.valuePredictingHighOutcome.hashCode());
    result = 31 * result + (this.valuePredictingHighOutcomeExplanation == null ? 0: this.valuePredictingHighOutcomeExplanation.hashCode());
    result = 31 * result + (this.valuePredictingLowOutcome == null ? 0: this.valuePredictingLowOutcome.hashCode());
    result = 31 * result + (this.valuePredictingLowOutcomeExplanation == null ? 0: this.valuePredictingLowOutcomeExplanation.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Correlation {\n");
    
    sb.append("  averageDailyLowCause: ").append(averageDailyLowCause).append("\n");
    sb.append("  averageDailyHighCause: ").append(averageDailyHighCause).append("\n");
    sb.append("  averageEffect: ").append(averageEffect).append("\n");
    sb.append("  averageEffectFollowingHighCause: ").append(averageEffectFollowingHighCause).append("\n");
    sb.append("  averageEffectFollowingLowCause: ").append(averageEffectFollowingLowCause).append("\n");
    sb.append("  averageEffectFollowingHighCauseExplanation: ").append(averageEffectFollowingHighCauseExplanation).append("\n");
    sb.append("  averageEffectFollowingLowCauseExplanation: ").append(averageEffectFollowingLowCauseExplanation).append("\n");
    sb.append("  averageVote: ").append(averageVote).append("\n");
    sb.append("  causalityFactor: ").append(causalityFactor).append("\n");
    sb.append("  cause: ").append(cause).append("\n");
    sb.append("  causeVariableCategoryName: ").append(causeVariableCategoryName).append("\n");
    sb.append("  causeChanges: ").append(causeChanges).append("\n");
    sb.append("  causeVariableCombinationOperation: ").append(causeVariableCombinationOperation).append("\n");
    sb.append("  causeVariableImageUrl: ").append(causeVariableImageUrl).append("\n");
    sb.append("  causeVariableIonIcon: ").append(causeVariableIonIcon).append("\n");
    sb.append("  causeUnit: ").append(causeUnit).append("\n");
    sb.append("  causeVariableDefaultUnitId: ").append(causeVariableDefaultUnitId).append("\n");
    sb.append("  causeVariableId: ").append(causeVariableId).append("\n");
    sb.append("  causeVariableName: ").append(causeVariableName).append("\n");
    sb.append("  correlationCoefficient: ").append(correlationCoefficient).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  dataAnalysis: ").append(dataAnalysis).append("\n");
    sb.append("  dataSources: ").append(dataSources).append("\n");
    sb.append("  durationOfAction: ").append(durationOfAction).append("\n");
    sb.append("  effect: ").append(effect).append("\n");
    sb.append("  effectVariableCategoryName: ").append(effectVariableCategoryName).append("\n");
    sb.append("  effectVariableImageUrl: ").append(effectVariableImageUrl).append("\n");
    sb.append("  effectVariableIonIcon: ").append(effectVariableIonIcon).append("\n");
    sb.append("  effectSize: ").append(effectSize).append("\n");
    sb.append("  effectVariableId: ").append(effectVariableId).append("\n");
    sb.append("  effectVariableName: ").append(effectVariableName).append("\n");
    sb.append("  gaugeImage: ").append(gaugeImage).append("\n");
    sb.append("  imageUrl: ").append(imageUrl).append("\n");
    sb.append("  numberOfPairs: ").append(numberOfPairs).append("\n");
    sb.append("  onsetDelay: ").append(onsetDelay).append("\n");
    sb.append("  optimalPearsonProduct: ").append(optimalPearsonProduct).append("\n");
    sb.append("  outcomeDataSources: ").append(outcomeDataSources).append("\n");
    sb.append("  predictorExplanation: ").append(predictorExplanation).append("\n");
    sb.append("  principalInvestigator: ").append(principalInvestigator).append("\n");
    sb.append("  qmScore: ").append(qmScore).append("\n");
    sb.append("  reverseCorrelation: ").append(reverseCorrelation).append("\n");
    sb.append("  significanceExplanation: ").append(significanceExplanation).append("\n");
    sb.append("  statisticalSignificance: ").append(statisticalSignificance).append("\n");
    sb.append("  strengthLevel: ").append(strengthLevel).append("\n");
    sb.append("  studyAbstract: ").append(studyAbstract).append("\n");
    sb.append("  studyBackground: ").append(studyBackground).append("\n");
    sb.append("  studyDesign: ").append(studyDesign).append("\n");
    sb.append("  studyLimitations: ").append(studyLimitations).append("\n");
    sb.append("  studyLinkDynamic: ").append(studyLinkDynamic).append("\n");
    sb.append("  studyLinkFacebook: ").append(studyLinkFacebook).append("\n");
    sb.append("  studyLinkGoogle: ").append(studyLinkGoogle).append("\n");
    sb.append("  studyLinkTwitter: ").append(studyLinkTwitter).append("\n");
    sb.append("  studyLinkStatic: ").append(studyLinkStatic).append("\n");
    sb.append("  studyObjective: ").append(studyObjective).append("\n");
    sb.append("  studyResults: ").append(studyResults).append("\n");
    sb.append("  studyTitle: ").append(studyTitle).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("  userVote: ").append(userVote).append("\n");
    sb.append("  valuePredictingHighOutcome: ").append(valuePredictingHighOutcome).append("\n");
    sb.append("  valuePredictingHighOutcomeExplanation: ").append(valuePredictingHighOutcomeExplanation).append("\n");
    sb.append("  valuePredictingLowOutcome: ").append(valuePredictingLowOutcome).append("\n");
    sb.append("  valuePredictingLowOutcomeExplanation: ").append(valuePredictingLowOutcomeExplanation).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
