/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ConnectorInstruction {
  
  @SerializedName("url")
  private String url = null;
  @SerializedName("parameters")
  private List<String> parameters = null;
  @SerializedName("usePopup")
  private Boolean usePopup = null;

  /**
   * url
   **/
  @ApiModelProperty(value = "url")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }

  /**
   * parameters array
   **/
  @ApiModelProperty(value = "parameters array")
  public List<String> getParameters() {
    return parameters;
  }
  public void setParameters(List<String> parameters) {
    this.parameters = parameters;
  }

  /**
   * usePopup
   **/
  @ApiModelProperty(value = "usePopup")
  public Boolean getUsePopup() {
    return usePopup;
  }
  public void setUsePopup(Boolean usePopup) {
    this.usePopup = usePopup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorInstruction connectorInstruction = (ConnectorInstruction) o;
    return (this.url == null ? connectorInstruction.url == null : this.url.equals(connectorInstruction.url)) &&
        (this.parameters == null ? connectorInstruction.parameters == null : this.parameters.equals(connectorInstruction.parameters)) &&
        (this.usePopup == null ? connectorInstruction.usePopup == null : this.usePopup.equals(connectorInstruction.usePopup));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.url == null ? 0: this.url.hashCode());
    result = 31 * result + (this.parameters == null ? 0: this.parameters.hashCode());
    result = 31 * result + (this.usePopup == null ? 0: this.usePopup.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorInstruction {\n");
    
    sb.append("  url: ").append(url).append("\n");
    sb.append("  parameters: ").append(parameters).append("\n");
    sb.append("  usePopup: ").append(usePopup).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
