/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class HumanTime {
  
  @SerializedName("date")
  private String date = null;
  @SerializedName("timezone_type")
  private Integer timezoneType = null;
  @SerializedName("timezone")
  private String timezone = null;

  /**
   * date time
   **/
  @ApiModelProperty(value = "date time")
  public String getDate() {
    return date;
  }
  public void setDate(String date) {
    this.date = date;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getTimezoneType() {
    return timezoneType;
  }
  public void setTimezoneType(Integer timezoneType) {
    this.timezoneType = timezoneType;
  }

  /**
   * timezone of date time
   **/
  @ApiModelProperty(value = "timezone of date time")
  public String getTimezone() {
    return timezone;
  }
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HumanTime humanTime = (HumanTime) o;
    return (this.date == null ? humanTime.date == null : this.date.equals(humanTime.date)) &&
        (this.timezoneType == null ? humanTime.timezoneType == null : this.timezoneType.equals(humanTime.timezoneType)) &&
        (this.timezone == null ? humanTime.timezone == null : this.timezone.equals(humanTime.timezone));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.date == null ? 0: this.date.hashCode());
    result = 31 * result + (this.timezoneType == null ? 0: this.timezoneType.hashCode());
    result = 31 * result + (this.timezone == null ? 0: this.timezone.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class HumanTime {\n");
    
    sb.append("  date: ").append(date).append("\n");
    sb.append("  timezoneType: ").append(timezoneType).append("\n");
    sb.append("  timezone: ").append(timezone).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
