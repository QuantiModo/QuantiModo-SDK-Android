/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Connector {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("displayName")
  private String displayName = null;
  @SerializedName("image")
  private String image = null;
  @SerializedName("getItUrl")
  private String getItUrl = null;
  @SerializedName("connected")
  private String connected = null;
  @SerializedName("connectInstructions")
  private String connectInstructions = null;
  @SerializedName("lastUpdate")
  private Integer lastUpdate = null;
  @SerializedName("totalMeasurementsInLastUpdate")
  private Integer totalMeasurementsInLastUpdate = null;

  /**
   * Connector ID number
   **/
  @ApiModelProperty(required = true, value = "Connector ID number")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Connector lowercase system name
   **/
  @ApiModelProperty(required = true, value = "Connector lowercase system name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Connector pretty display name
   **/
  @ApiModelProperty(required = true, value = "Connector pretty display name")
  public String getDisplayName() {
    return displayName;
  }
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  /**
   * URL to the image of the connector logo
   **/
  @ApiModelProperty(required = true, value = "URL to the image of the connector logo")
  public String getImage() {
    return image;
  }
  public void setImage(String image) {
    this.image = image;
  }

  /**
   * URL to a site where one can get this device or application
   **/
  @ApiModelProperty(required = true, value = "URL to a site where one can get this device or application")
  public String getGetItUrl() {
    return getItUrl;
  }
  public void setGetItUrl(String getItUrl) {
    this.getItUrl = getItUrl;
  }

  /**
   * True if the authenticated user has this connector enabled
   **/
  @ApiModelProperty(required = true, value = "True if the authenticated user has this connector enabled")
  public String getConnected() {
    return connected;
  }
  public void setConnected(String connected) {
    this.connected = connected;
  }

  /**
   * URL and parameters used when connecting to a service
   **/
  @ApiModelProperty(required = true, value = "URL and parameters used when connecting to a service")
  public String getConnectInstructions() {
    return connectInstructions;
  }
  public void setConnectInstructions(String connectInstructions) {
    this.connectInstructions = connectInstructions;
  }

  /**
   * Epoch timestamp of last sync
   **/
  @ApiModelProperty(required = true, value = "Epoch timestamp of last sync")
  public Integer getLastUpdate() {
    return lastUpdate;
  }
  public void setLastUpdate(Integer lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  /**
   * Number of measurements obtained during latest update
   **/
  @ApiModelProperty(required = true, value = "Number of measurements obtained during latest update")
  public Integer getTotalMeasurementsInLastUpdate() {
    return totalMeasurementsInLastUpdate;
  }
  public void setTotalMeasurementsInLastUpdate(Integer totalMeasurementsInLastUpdate) {
    this.totalMeasurementsInLastUpdate = totalMeasurementsInLastUpdate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Connector connector = (Connector) o;
    return (this.id == null ? connector.id == null : this.id.equals(connector.id)) &&
        (this.name == null ? connector.name == null : this.name.equals(connector.name)) &&
        (this.displayName == null ? connector.displayName == null : this.displayName.equals(connector.displayName)) &&
        (this.image == null ? connector.image == null : this.image.equals(connector.image)) &&
        (this.getItUrl == null ? connector.getItUrl == null : this.getItUrl.equals(connector.getItUrl)) &&
        (this.connected == null ? connector.connected == null : this.connected.equals(connector.connected)) &&
        (this.connectInstructions == null ? connector.connectInstructions == null : this.connectInstructions.equals(connector.connectInstructions)) &&
        (this.lastUpdate == null ? connector.lastUpdate == null : this.lastUpdate.equals(connector.lastUpdate)) &&
        (this.totalMeasurementsInLastUpdate == null ? connector.totalMeasurementsInLastUpdate == null : this.totalMeasurementsInLastUpdate.equals(connector.totalMeasurementsInLastUpdate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.displayName == null ? 0: this.displayName.hashCode());
    result = 31 * result + (this.image == null ? 0: this.image.hashCode());
    result = 31 * result + (this.getItUrl == null ? 0: this.getItUrl.hashCode());
    result = 31 * result + (this.connected == null ? 0: this.connected.hashCode());
    result = 31 * result + (this.connectInstructions == null ? 0: this.connectInstructions.hashCode());
    result = 31 * result + (this.lastUpdate == null ? 0: this.lastUpdate.hashCode());
    result = 31 * result + (this.totalMeasurementsInLastUpdate == null ? 0: this.totalMeasurementsInLastUpdate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Connector {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  displayName: ").append(displayName).append("\n");
    sb.append("  image: ").append(image).append("\n");
    sb.append("  getItUrl: ").append(getItUrl).append("\n");
    sb.append("  connected: ").append(connected).append("\n");
    sb.append("  connectInstructions: ").append(connectInstructions).append("\n");
    sb.append("  lastUpdate: ").append(lastUpdate).append("\n");
    sb.append("  totalMeasurementsInLastUpdate: ").append(totalMeasurementsInLastUpdate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
