/**
 * QuantiModo
 * QuantiModo makes it easy to retrieve normalized user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do), check out our [docs](https://github.com/QuantiModo/docs) or contact us at [help.quantimo.do](https://help.quantimo.do). 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ConnectorInfoHistoryItem {
  
  @SerializedName("numberOfMeasurements")
  private Integer numberOfMeasurements = null;
  @SerializedName("success")
  private Boolean success = null;
  @SerializedName("message")
  private String message = null;
  @SerializedName("createdAt")
  private String createdAt = null;

  /**
   * Number of measurements
   **/
  @ApiModelProperty(required = true, value = "Number of measurements")
  public Integer getNumberOfMeasurements() {
    return numberOfMeasurements;
  }
  public void setNumberOfMeasurements(Integer numberOfMeasurements) {
    this.numberOfMeasurements = numberOfMeasurements;
  }

  /**
   * True if the update was successfull
   **/
  @ApiModelProperty(required = true, value = "True if the update was successfull")
  public Boolean getSuccess() {
    return success;
  }
  public void setSuccess(Boolean success) {
    this.success = success;
  }

  /**
   * Error message.
   **/
  @ApiModelProperty(required = true, value = "Error message.")
  public String getMessage() {
    return message;
  }
  public void setMessage(String message) {
    this.message = message;
  }

  /**
   * Date and time of the update in UTC time zone
   **/
  @ApiModelProperty(required = true, value = "Date and time of the update in UTC time zone")
  public String getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorInfoHistoryItem connectorInfoHistoryItem = (ConnectorInfoHistoryItem) o;
    return (this.numberOfMeasurements == null ? connectorInfoHistoryItem.numberOfMeasurements == null : this.numberOfMeasurements.equals(connectorInfoHistoryItem.numberOfMeasurements)) &&
        (this.success == null ? connectorInfoHistoryItem.success == null : this.success.equals(connectorInfoHistoryItem.success)) &&
        (this.message == null ? connectorInfoHistoryItem.message == null : this.message.equals(connectorInfoHistoryItem.message)) &&
        (this.createdAt == null ? connectorInfoHistoryItem.createdAt == null : this.createdAt.equals(connectorInfoHistoryItem.createdAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.numberOfMeasurements == null ? 0: this.numberOfMeasurements.hashCode());
    result = 31 * result + (this.success == null ? 0: this.success.hashCode());
    result = 31 * result + (this.message == null ? 0: this.message.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorInfoHistoryItem {\n");
    
    sb.append("  numberOfMeasurements: ").append(numberOfMeasurements).append("\n");
    sb.append("  success: ").append(success).append("\n");
    sb.append("  message: ").append(message).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
